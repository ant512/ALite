V2.4

 - Split DBObject and DBObjectCollection interfaces into separate files.
 - Added Tests project.
 - Minor optimisations to SetProperty() and Undo() methods of DBObject.
 - Added locking to various places in DBObject and DBObjectCollection to
   fix potential problems in multithreaded applications.
 - DBObjectCollection.Clear() removes all of the list's event listeners from
   the child objects.
 - Refactored delegate and simple validation lists into their own classes.
 - Completely refactored simple validation system to be extensible; added:
   - IValidationRule interface;
   - StringLengthValidationRule class;
   - IntegerBoundsValidationRule class;
 - Removed "propertyName" parameter from "Validator" delegate signature as it is
   (and always has been) unused.
 - Simple validation system returns error messages in the same way as the
   delegate validation system.
 - DBObject.Undo() catches any TargetInvocationException errors and re-raises
   them as UndoException errors.

V2.30

 - Various internal functions/variables renamed to fix VB.NET compatibility.
 - DBObject property change events are wired up to the DBObjectCollection.
 - Made DBObjectCollection.HandleChildPropertyChanged private.
 - Added makefile.
 - Removed Created property from DBObject.
 - Removed Updated property from DBObject.

V2.20 (20080818)

 - Fixed incorrect comments for DataAccess.Read() and DataAccess.NextResult().
 - Sproc called correctly by DataAccess object if sproc is chosen data retrieval
   method.

V2.10 (20080617)

 - Status enum uses the [flags] attribute.
 - Database interaction is optionally transactional.
 - Improved DataAccess disposal.
 - Parameters now passed when working with inline SQL code as well as sprocs.
 - Renamed DataAccess.SQLCode to DataAccess.InlineCode.
 - Added IDataAccess interface.
 - Removed DataAccess.ParameterList property.
 - DataAccess uses a generic list instead of an array list to store SQL
   parameters.
 - Changed memento in DBObject to a Dictionary<> instead of a SortedList.
 - Split manual into a separate text file.
 - Swapped from calling DataAccess.Dispose() to a using block instead.
 - Removed DataAccess.Close().
 - Renamed DBObject.ValidationDelegate to Validator.
 - Fixed a variety of FxCop warnings.

V2.0 (20080606)

 - Added delegate-based validation system.
 - Added ValidationException class.
 - Added DBObjectCollection sorting.
 - Replaced backup/restore function with transactional, automatic property
   backup system and "undo" method.
 - Made SetProperty() function thread safe.
 - DataAccess class has an alternative constructor that accepts a connection
   string.
 - DataAccess class can execute inline SQL in addition to stored procedures.
 - Added OnXXX() methods to enable extending functionality without interfering
   with essential built-in methods.
 - Status of DBObjects and collections is tracked by the undo system.
 - Replaced individual status variables with a single bitmask to make undoing
   changes easier.

V1.0

 - First release.